// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pepenet_social.proto

#include "pepenet_social.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_pepenet_5fsocial_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_pep_base_pepenet_5fsocial_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_pepenet_5fsocial_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_post_base_pepenet_5fsocial_2eproto;
namespace pepenet_social_protos {
class pep_baseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<pep_base> _instance;
} _pep_base_default_instance_;
class pepDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<pep> _instance;
} _pep_default_instance_;
class post_baseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<post_base> _instance;
} _post_base_default_instance_;
class postDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<post> _instance;
} _post_default_instance_;
}  // namespace pepenet_social_protos
static void InitDefaultsscc_info_pep_pepenet_5fsocial_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pepenet_social_protos::_pep_default_instance_;
    new (ptr) ::pepenet_social_protos::pep();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pepenet_social_protos::pep::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_pep_pepenet_5fsocial_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_pep_pepenet_5fsocial_2eproto}, {
      &scc_info_pep_base_pepenet_5fsocial_2eproto.base,}};

static void InitDefaultsscc_info_pep_base_pepenet_5fsocial_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pepenet_social_protos::_pep_base_default_instance_;
    new (ptr) ::pepenet_social_protos::pep_base();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pepenet_social_protos::pep_base::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_pep_base_pepenet_5fsocial_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_pep_base_pepenet_5fsocial_2eproto}, {}};

static void InitDefaultsscc_info_post_pepenet_5fsocial_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pepenet_social_protos::_post_default_instance_;
    new (ptr) ::pepenet_social_protos::post();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pepenet_social_protos::post::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_post_pepenet_5fsocial_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_post_pepenet_5fsocial_2eproto}, {
      &scc_info_post_base_pepenet_5fsocial_2eproto.base,}};

static void InitDefaultsscc_info_post_base_pepenet_5fsocial_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pepenet_social_protos::_post_base_default_instance_;
    new (ptr) ::pepenet_social_protos::post_base();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pepenet_social_protos::post_base::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_post_base_pepenet_5fsocial_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_post_base_pepenet_5fsocial_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_pepenet_5fsocial_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_pepenet_5fsocial_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_pepenet_5fsocial_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_pepenet_5fsocial_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::pep_base, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::pep_base, msg_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::pep_base, pseudonym_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::pep_base, pk_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::pep_base, tx_ref_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::pep_base, pepetag_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::pep_base, donation_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::pep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::pep, base_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::pep, sig_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::post_base, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::post_base, title_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::post_base, msg_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::post_base, pseudonym_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::post_base, pk_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::post_base, tx_ref_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::post_base, pepetag_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::post_base, donation_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::post, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::post, base_),
  PROTOBUF_FIELD_OFFSET(::pepenet_social_protos::post, sig_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pepenet_social_protos::pep_base)},
  { 11, -1, sizeof(::pepenet_social_protos::pep)},
  { 18, -1, sizeof(::pepenet_social_protos::post_base)},
  { 30, -1, sizeof(::pepenet_social_protos::post)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pepenet_social_protos::_pep_base_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pepenet_social_protos::_pep_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pepenet_social_protos::_post_base_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pepenet_social_protos::_post_default_instance_),
};

const char descriptor_table_protodef_pepenet_5fsocial_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024pepenet_social.proto\022\025pepenet_social_p"
  "rotos\"q\n\010pep_base\022\013\n\003msg\030\001 \001(\t\022\021\n\tpseudo"
  "nym\030\002 \001(\t\022\n\n\002pk\030\003 \001(\014\022\016\n\006tx_ref\030\004 \001(\014\022\017\n"
  "\007pepetag\030\005 \001(\t\022\030\n\020donation_address\030\006 \001(\t"
  "\"A\n\003pep\022-\n\004base\030\001 \001(\0132\037.pepenet_social_p"
  "rotos.pep_base\022\013\n\003sig\030\002 \001(\014\"\201\001\n\tpost_bas"
  "e\022\r\n\005title\030\001 \001(\t\022\013\n\003msg\030\002 \001(\t\022\021\n\tpseudon"
  "ym\030\003 \001(\t\022\n\n\002pk\030\004 \001(\014\022\016\n\006tx_ref\030\005 \001(\014\022\017\n\007"
  "pepetag\030\006 \001(\t\022\030\n\020donation_address\030\007 \001(\t\""
  "C\n\004post\022.\n\004base\030\001 \001(\0132 .pepenet_social_p"
  "rotos.post_base\022\013\n\003sig\030\002 \001(\014b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_pepenet_5fsocial_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_pepenet_5fsocial_2eproto_sccs[4] = {
  &scc_info_pep_pepenet_5fsocial_2eproto.base,
  &scc_info_pep_base_pepenet_5fsocial_2eproto.base,
  &scc_info_post_pepenet_5fsocial_2eproto.base,
  &scc_info_post_base_pepenet_5fsocial_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_pepenet_5fsocial_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pepenet_5fsocial_2eproto = {
  false, false, descriptor_table_protodef_pepenet_5fsocial_2eproto, "pepenet_social.proto", 436,
  &descriptor_table_pepenet_5fsocial_2eproto_once, descriptor_table_pepenet_5fsocial_2eproto_sccs, descriptor_table_pepenet_5fsocial_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_pepenet_5fsocial_2eproto::offsets,
  file_level_metadata_pepenet_5fsocial_2eproto, 4, file_level_enum_descriptors_pepenet_5fsocial_2eproto, file_level_service_descriptors_pepenet_5fsocial_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_pepenet_5fsocial_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_pepenet_5fsocial_2eproto)), true);
namespace pepenet_social_protos {

// ===================================================================

void pep_base::InitAsDefaultInstance() {
}
class pep_base::_Internal {
 public:
};

pep_base::pep_base(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pepenet_social_protos.pep_base)
}
pep_base::pep_base(const pep_base& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  pseudonym_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pseudonym().empty()) {
    pseudonym_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pseudonym(),
      GetArena());
  }
  pk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pk().empty()) {
    pk_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pk(),
      GetArena());
  }
  tx_ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tx_ref().empty()) {
    tx_ref_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tx_ref(),
      GetArena());
  }
  pepetag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pepetag().empty()) {
    pepetag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pepetag(),
      GetArena());
  }
  donation_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_donation_address().empty()) {
    donation_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_donation_address(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:pepenet_social_protos.pep_base)
}

void pep_base::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_pep_base_pepenet_5fsocial_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pseudonym_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tx_ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pepetag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  donation_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

pep_base::~pep_base() {
  // @@protoc_insertion_point(destructor:pepenet_social_protos.pep_base)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void pep_base::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pseudonym_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tx_ref_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pepetag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  donation_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void pep_base::ArenaDtor(void* object) {
  pep_base* _this = reinterpret_cast< pep_base* >(object);
  (void)_this;
}
void pep_base::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void pep_base::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const pep_base& pep_base::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_pep_base_pepenet_5fsocial_2eproto.base);
  return *internal_default_instance();
}


void pep_base::Clear() {
// @@protoc_insertion_point(message_clear_start:pepenet_social_protos.pep_base)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pseudonym_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pk_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tx_ref_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pepetag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  donation_address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* pep_base::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pepenet_social_protos.pep_base.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pseudonym = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pseudonym();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pepenet_social_protos.pep_base.pseudonym"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes pk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_pk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes tx_ref = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_tx_ref();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pepetag = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_pepetag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pepenet_social_protos.pep_base.pepetag"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string donation_address = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_donation_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pepenet_social_protos.pep_base.donation_address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* pep_base::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pepenet_social_protos.pep_base)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pepenet_social_protos.pep_base.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  // string pseudonym = 2;
  if (this->pseudonym().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pseudonym().data(), static_cast<int>(this->_internal_pseudonym().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pepenet_social_protos.pep_base.pseudonym");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pseudonym(), target);
  }

  // bytes pk = 3;
  if (this->pk().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_pk(), target);
  }

  // bytes tx_ref = 4;
  if (this->tx_ref().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_tx_ref(), target);
  }

  // string pepetag = 5;
  if (this->pepetag().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pepetag().data(), static_cast<int>(this->_internal_pepetag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pepenet_social_protos.pep_base.pepetag");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_pepetag(), target);
  }

  // string donation_address = 6;
  if (this->donation_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_donation_address().data(), static_cast<int>(this->_internal_donation_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pepenet_social_protos.pep_base.donation_address");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_donation_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pepenet_social_protos.pep_base)
  return target;
}

size_t pep_base::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pepenet_social_protos.pep_base)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string pseudonym = 2;
  if (this->pseudonym().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pseudonym());
  }

  // bytes pk = 3;
  if (this->pk().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pk());
  }

  // bytes tx_ref = 4;
  if (this->tx_ref().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tx_ref());
  }

  // string pepetag = 5;
  if (this->pepetag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pepetag());
  }

  // string donation_address = 6;
  if (this->donation_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_donation_address());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pep_base::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pepenet_social_protos.pep_base)
  GOOGLE_DCHECK_NE(&from, this);
  const pep_base* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<pep_base>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pepenet_social_protos.pep_base)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pepenet_social_protos.pep_base)
    MergeFrom(*source);
  }
}

void pep_base::MergeFrom(const pep_base& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pepenet_social_protos.pep_base)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.pseudonym().size() > 0) {
    _internal_set_pseudonym(from._internal_pseudonym());
  }
  if (from.pk().size() > 0) {
    _internal_set_pk(from._internal_pk());
  }
  if (from.tx_ref().size() > 0) {
    _internal_set_tx_ref(from._internal_tx_ref());
  }
  if (from.pepetag().size() > 0) {
    _internal_set_pepetag(from._internal_pepetag());
  }
  if (from.donation_address().size() > 0) {
    _internal_set_donation_address(from._internal_donation_address());
  }
}

void pep_base::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pepenet_social_protos.pep_base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pep_base::CopyFrom(const pep_base& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pepenet_social_protos.pep_base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pep_base::IsInitialized() const {
  return true;
}

void pep_base::InternalSwap(pep_base* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pseudonym_.Swap(&other->pseudonym_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pk_.Swap(&other->pk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tx_ref_.Swap(&other->tx_ref_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pepetag_.Swap(&other->pepetag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  donation_address_.Swap(&other->donation_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata pep_base::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void pep::InitAsDefaultInstance() {
  ::pepenet_social_protos::_pep_default_instance_._instance.get_mutable()->base_ = const_cast< ::pepenet_social_protos::pep_base*>(
      ::pepenet_social_protos::pep_base::internal_default_instance());
}
class pep::_Internal {
 public:
  static const ::pepenet_social_protos::pep_base& base(const pep* msg);
};

const ::pepenet_social_protos::pep_base&
pep::_Internal::base(const pep* msg) {
  return *msg->base_;
}
pep::pep(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pepenet_social_protos.pep)
}
pep::pep(const pep& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sig_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sig().empty()) {
    sig_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sig(),
      GetArena());
  }
  if (from._internal_has_base()) {
    base_ = new ::pepenet_social_protos::pep_base(*from.base_);
  } else {
    base_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pepenet_social_protos.pep)
}

void pep::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_pep_pepenet_5fsocial_2eproto.base);
  sig_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  base_ = nullptr;
}

pep::~pep() {
  // @@protoc_insertion_point(destructor:pepenet_social_protos.pep)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void pep::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sig_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_;
}

void pep::ArenaDtor(void* object) {
  pep* _this = reinterpret_cast< pep* >(object);
  (void)_this;
}
void pep::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void pep::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const pep& pep::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_pep_pepenet_5fsocial_2eproto.base);
  return *internal_default_instance();
}


void pep::Clear() {
// @@protoc_insertion_point(message_clear_start:pepenet_social_protos.pep)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sig_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* pep::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pepenet_social_protos.pep_base base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes sig = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sig();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* pep::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pepenet_social_protos.pep)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pepenet_social_protos.pep_base base = 1;
  if (this->has_base()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::base(this), target, stream);
  }

  // bytes sig = 2;
  if (this->sig().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_sig(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pepenet_social_protos.pep)
  return target;
}

size_t pep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pepenet_social_protos.pep)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes sig = 2;
  if (this->sig().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sig());
  }

  // .pepenet_social_protos.pep_base base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *base_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pep::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pepenet_social_protos.pep)
  GOOGLE_DCHECK_NE(&from, this);
  const pep* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<pep>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pepenet_social_protos.pep)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pepenet_social_protos.pep)
    MergeFrom(*source);
  }
}

void pep::MergeFrom(const pep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pepenet_social_protos.pep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sig().size() > 0) {
    _internal_set_sig(from._internal_sig());
  }
  if (from.has_base()) {
    _internal_mutable_base()->::pepenet_social_protos::pep_base::MergeFrom(from._internal_base());
  }
}

void pep::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pepenet_social_protos.pep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pep::CopyFrom(const pep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pepenet_social_protos.pep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pep::IsInitialized() const {
  return true;
}

void pep::InternalSwap(pep* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sig_.Swap(&other->sig_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(base_, other->base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata pep::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void post_base::InitAsDefaultInstance() {
}
class post_base::_Internal {
 public:
};

post_base::post_base(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pepenet_social_protos.post_base)
}
post_base::post_base(const post_base& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_title(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  pseudonym_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pseudonym().empty()) {
    pseudonym_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pseudonym(),
      GetArena());
  }
  pk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pk().empty()) {
    pk_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pk(),
      GetArena());
  }
  tx_ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tx_ref().empty()) {
    tx_ref_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tx_ref(),
      GetArena());
  }
  pepetag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pepetag().empty()) {
    pepetag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pepetag(),
      GetArena());
  }
  donation_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_donation_address().empty()) {
    donation_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_donation_address(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:pepenet_social_protos.post_base)
}

void post_base::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_post_base_pepenet_5fsocial_2eproto.base);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pseudonym_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tx_ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pepetag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  donation_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

post_base::~post_base() {
  // @@protoc_insertion_point(destructor:pepenet_social_protos.post_base)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void post_base::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pseudonym_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tx_ref_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pepetag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  donation_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void post_base::ArenaDtor(void* object) {
  post_base* _this = reinterpret_cast< post_base* >(object);
  (void)_this;
}
void post_base::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void post_base::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const post_base& post_base::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_post_base_pepenet_5fsocial_2eproto.base);
  return *internal_default_instance();
}


void post_base::Clear() {
// @@protoc_insertion_point(message_clear_start:pepenet_social_protos.post_base)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pseudonym_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pk_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tx_ref_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pepetag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  donation_address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* post_base::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string title = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pepenet_social_protos.post_base.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pepenet_social_protos.post_base.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pseudonym = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_pseudonym();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pepenet_social_protos.post_base.pseudonym"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes pk = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_pk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes tx_ref = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_tx_ref();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pepetag = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_pepetag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pepenet_social_protos.post_base.pepetag"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string donation_address = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_donation_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pepenet_social_protos.post_base.donation_address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* post_base::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pepenet_social_protos.post_base)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pepenet_social_protos.post_base.title");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_title(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pepenet_social_protos.post_base.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // string pseudonym = 3;
  if (this->pseudonym().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pseudonym().data(), static_cast<int>(this->_internal_pseudonym().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pepenet_social_protos.post_base.pseudonym");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_pseudonym(), target);
  }

  // bytes pk = 4;
  if (this->pk().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_pk(), target);
  }

  // bytes tx_ref = 5;
  if (this->tx_ref().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_tx_ref(), target);
  }

  // string pepetag = 6;
  if (this->pepetag().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pepetag().data(), static_cast<int>(this->_internal_pepetag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pepenet_social_protos.post_base.pepetag");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_pepetag(), target);
  }

  // string donation_address = 7;
  if (this->donation_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_donation_address().data(), static_cast<int>(this->_internal_donation_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pepenet_social_protos.post_base.donation_address");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_donation_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pepenet_social_protos.post_base)
  return target;
}

size_t post_base::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pepenet_social_protos.post_base)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string pseudonym = 3;
  if (this->pseudonym().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pseudonym());
  }

  // bytes pk = 4;
  if (this->pk().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pk());
  }

  // bytes tx_ref = 5;
  if (this->tx_ref().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tx_ref());
  }

  // string pepetag = 6;
  if (this->pepetag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pepetag());
  }

  // string donation_address = 7;
  if (this->donation_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_donation_address());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void post_base::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pepenet_social_protos.post_base)
  GOOGLE_DCHECK_NE(&from, this);
  const post_base* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<post_base>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pepenet_social_protos.post_base)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pepenet_social_protos.post_base)
    MergeFrom(*source);
  }
}

void post_base::MergeFrom(const post_base& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pepenet_social_protos.post_base)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {
    _internal_set_title(from._internal_title());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.pseudonym().size() > 0) {
    _internal_set_pseudonym(from._internal_pseudonym());
  }
  if (from.pk().size() > 0) {
    _internal_set_pk(from._internal_pk());
  }
  if (from.tx_ref().size() > 0) {
    _internal_set_tx_ref(from._internal_tx_ref());
  }
  if (from.pepetag().size() > 0) {
    _internal_set_pepetag(from._internal_pepetag());
  }
  if (from.donation_address().size() > 0) {
    _internal_set_donation_address(from._internal_donation_address());
  }
}

void post_base::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pepenet_social_protos.post_base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void post_base::CopyFrom(const post_base& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pepenet_social_protos.post_base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool post_base::IsInitialized() const {
  return true;
}

void post_base::InternalSwap(post_base* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pseudonym_.Swap(&other->pseudonym_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pk_.Swap(&other->pk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tx_ref_.Swap(&other->tx_ref_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pepetag_.Swap(&other->pepetag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  donation_address_.Swap(&other->donation_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata post_base::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void post::InitAsDefaultInstance() {
  ::pepenet_social_protos::_post_default_instance_._instance.get_mutable()->base_ = const_cast< ::pepenet_social_protos::post_base*>(
      ::pepenet_social_protos::post_base::internal_default_instance());
}
class post::_Internal {
 public:
  static const ::pepenet_social_protos::post_base& base(const post* msg);
};

const ::pepenet_social_protos::post_base&
post::_Internal::base(const post* msg) {
  return *msg->base_;
}
post::post(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pepenet_social_protos.post)
}
post::post(const post& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sig_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sig().empty()) {
    sig_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sig(),
      GetArena());
  }
  if (from._internal_has_base()) {
    base_ = new ::pepenet_social_protos::post_base(*from.base_);
  } else {
    base_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pepenet_social_protos.post)
}

void post::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_post_pepenet_5fsocial_2eproto.base);
  sig_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  base_ = nullptr;
}

post::~post() {
  // @@protoc_insertion_point(destructor:pepenet_social_protos.post)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void post::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sig_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_;
}

void post::ArenaDtor(void* object) {
  post* _this = reinterpret_cast< post* >(object);
  (void)_this;
}
void post::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void post::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const post& post::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_post_pepenet_5fsocial_2eproto.base);
  return *internal_default_instance();
}


void post::Clear() {
// @@protoc_insertion_point(message_clear_start:pepenet_social_protos.post)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sig_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* post::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pepenet_social_protos.post_base base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes sig = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sig();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* post::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pepenet_social_protos.post)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pepenet_social_protos.post_base base = 1;
  if (this->has_base()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::base(this), target, stream);
  }

  // bytes sig = 2;
  if (this->sig().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_sig(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pepenet_social_protos.post)
  return target;
}

size_t post::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pepenet_social_protos.post)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes sig = 2;
  if (this->sig().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sig());
  }

  // .pepenet_social_protos.post_base base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *base_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void post::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pepenet_social_protos.post)
  GOOGLE_DCHECK_NE(&from, this);
  const post* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<post>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pepenet_social_protos.post)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pepenet_social_protos.post)
    MergeFrom(*source);
  }
}

void post::MergeFrom(const post& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pepenet_social_protos.post)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sig().size() > 0) {
    _internal_set_sig(from._internal_sig());
  }
  if (from.has_base()) {
    _internal_mutable_base()->::pepenet_social_protos::post_base::MergeFrom(from._internal_base());
  }
}

void post::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pepenet_social_protos.post)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void post::CopyFrom(const post& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pepenet_social_protos.post)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool post::IsInitialized() const {
  return true;
}

void post::InternalSwap(post* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sig_.Swap(&other->sig_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(base_, other->base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata post::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pepenet_social_protos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pepenet_social_protos::pep_base* Arena::CreateMaybeMessage< ::pepenet_social_protos::pep_base >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pepenet_social_protos::pep_base >(arena);
}
template<> PROTOBUF_NOINLINE ::pepenet_social_protos::pep* Arena::CreateMaybeMessage< ::pepenet_social_protos::pep >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pepenet_social_protos::pep >(arena);
}
template<> PROTOBUF_NOINLINE ::pepenet_social_protos::post_base* Arena::CreateMaybeMessage< ::pepenet_social_protos::post_base >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pepenet_social_protos::post_base >(arena);
}
template<> PROTOBUF_NOINLINE ::pepenet_social_protos::post* Arena::CreateMaybeMessage< ::pepenet_social_protos::post >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pepenet_social_protos::post >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
